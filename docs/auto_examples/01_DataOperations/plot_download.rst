

.. _sphx_glr_auto_examples_01_DataOperations_plot_download.py:

 
Basic nltools example: Downloading data
=======================================

A simple example showing how to download a dataset from neurovault



Download pain dataset from neurovault
---------------------------------------------------

Here we fetch the pain dataset used in Chang et al., 2015.  In this dataset
there are 28 subjects with 3 separate beta images reflecting varying intensities
of thermal pain (i.e., high, medium, low).  The data will be downloaded to ~/nilearn_data,
and automatically loaded as a Brain_Data() instance.  The metadata will be stored in data.X.



.. code-block:: python


    from nltools.datasets import fetch_pain

    data = fetch_pain()







Basic Brain_Data() Operations
---------------------------------------------------------

Here are a few quick basic data operations.
Find number of images in Brain_Data() instance



.. code-block:: python


    len(data)







Find the dimensions of the data.  images x voxels



.. code-block:: python


    data.shape()







We can use any type of indexing to slice the data



.. code-block:: python


    data[[1,6,2]]







Calculate the mean for every voxel over images



.. code-block:: python


    data.mean()







Methods can be chained.  Here we get the shape of the mean.



.. code-block:: python


    data.mean().shape()







Brain_Data instances can be added and subtracted



.. code-block:: python


    new = data[1]+data[2]







Brain_Data instances can be concatenated using the append method



.. code-block:: python


    new = new.append(data[4])







Any Brain_Data object can be written out to a nifti file



.. code-block:: python


    data.write('Tmp_Data.nii.gz')
	






Basic Brain_Data() Plotting
---------------------------------------------------------

There are multiple ways to plot data.  First, Brain_Data() instances can be 
converted to a nibabel instance and plotted using any plot method such as
nilearn.



.. code-block:: python


    from nilearn.plotting import plot_glass_brain

    plot_glass_brain(data.mean().to_nifti())




.. image:: /auto_examples/01_DataOperations/images/sphx_glr_plot_download_001.png
    :align: center




There is also a fast montage plotting method.  Here we plot the average image



.. code-block:: python


    data.mean().plot()




.. image:: /auto_examples/01_DataOperations/images/sphx_glr_plot_download_002.png
    :align: center




**Total running time of the script:** ( 0 minutes  27.678 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_download.py <plot_download.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_download.ipynb <plot_download.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
